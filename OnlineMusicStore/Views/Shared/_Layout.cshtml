<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
    <title>@ViewBag.Title - SongCart</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <style>
        :root {
            --primary: #8a2be2;
            --primary-dark: #7823c7;
            --secondary: #ff6b6b;
            --dark-bg: #121212;
            --dark-card: #1e1e1e;
            --dark-card-hover: #252525;
            --dark-input: #2a2a2a;
            --text-primary: #ffffff;
            --text-secondary: #b3b3b3;
            --accent: #bb86fc;
            --success: #03dac6;
            --warning: #ff9800;
            --danger: #cf6679;
        }

        body {
            padding-top: 80px;
            background-color: var(--dark-bg);
            color: var(--text-primary);
            font-family: 'Poppins', sans-serif;
            transition: all 0.3s ease;
        }

        /* Premium Navbar */
        .premium-navbar {
            background: linear-gradient(90deg, #121212 0%, #1a1a1a 100%);
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
            padding: 0.8rem 0;
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
            z-index: 1050;
        }

        .navbar-brand {
            font-weight: 700;
            font-size: 1.8rem;
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent !important;
            padding: 0.5rem 0;
            letter-spacing: 1px;
            transition: all 0.3s ease;
        }

        .navbar-brand:hover {
            opacity: 0.9;
            transform: scale(1.05);
        }

        .premium-nav-link {
            color: var(--text-primary) !important;
            font-weight: 500;
            margin: 0 0.2rem;
            padding: 0.5rem 0.6rem !important;
            border-radius: 8px;
            transition: all 0.3s ease;
            position: relative;
            display: flex;
            align-items: center;
            justify-content: center;
            min-width: auto; /* Reduced min-width */
            text-align: center;
            white-space: nowrap; /* Prevent text wrapping */
        }

        .premium-nav-link:hover {
            color: var(--accent) !important;
            background-color: rgba(255, 255, 255, 0.05);
        }

        .premium-nav-link::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            width: 0;
            height: 2px;
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            transition: all 0.3s ease;
        }

        .premium-nav-link:hover::after {
            width: 80%;
            left: 10%;
        }

        /* Active link styling */
        .premium-nav-link.active {
            color: var(--accent) !important;
            background-color: rgba(255, 255, 255, 0.1);
        }

        .premium-nav-link.active::after {
            width: 80%;
            left: 10%;
        }

        /* Premium Container */
        .premium-container {
            padding: 2rem;
            background-color: rgba(30, 30, 30, 0.6);
            border-radius: 16px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(10px);
            -webkit-backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.05);
            margin-bottom: 2rem;
        }

        /* Premium Cards */
        .premium-card {
            background-color: var(--dark-card);
            border-radius: 12px;
            border: 1px solid rgba(255, 255, 255, 0.05);
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
            transition: all 0.3s ease;
            overflow: hidden;
            height: 100%;
        }

        .premium-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.3);
            background-color: var(--dark-card-hover);
        }

        .premium-card .card-title {
            font-weight: 600;
            font-size: 1.1rem;
            margin-bottom: 1rem;
        }

        .premium-card .card-text {
            font-size: 1.5rem;
            font-weight: 700;
        }

        /* Premium Buttons */
        .btn-premium {
            background: linear-gradient(45deg, var(--primary), var(--primary-dark));
            color: white;
            border: none;
            border-radius: 8px;
            padding: 0.6rem 1.5rem;
            font-weight: 500;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(138, 43, 226, 0.3);
        }

        .btn-premium:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(138, 43, 226, 0.5);
            color: white;
        }

        .btn-premium:active {
            transform: translateY(1px);
        }

        .btn-premium-sm {
            padding: 0.4rem 1rem;
            font-size: 0.9rem;
        }

        /* Premium Form Controls */
        .form-control-premium {
            background-color: var(--dark-input);
            border: 1px solid rgba(255, 255, 255, 0.1);
            color: var(--text-primary);
            border-radius: 8px;
            padding: 0.8rem 1rem;
            transition: all 0.3s ease;
        }

        .form-control-premium:focus {
            background-color: rgba(42, 42, 42, 0.8);
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(138, 43, 226, 0.25);
            color: var(--text-primary);
        }

        /* Premium Table */
        .premium-table {
            background-color: var(--dark-card);
            border-radius: 12px;
            overflow: hidden;
            border: 1px solid rgba(255, 255, 255, 0.05);
        }

        .premium-table th {
            background-color: rgba(30, 30, 30, 0.9);
            color: var(--text-primary);
            font-weight: 600;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            padding: 1rem;
        }

        .premium-table td {
            color: var(--text-secondary);
            border-bottom: 1px solid rgba(255, 255, 255, 0.05);
            padding: 0.8rem 1rem;
        }

        .premium-table tr:hover {
            background-color: rgba(255, 255, 255, 0.05);
        }

        /* Premium Footer */
        .premium-footer {
            text-align: center;
            padding: 2rem 0;
            color: var(--text-secondary);
            font-size: 0.9rem;
            margin-top: 3rem;
            border-top: 1px solid rgba(255, 255, 255, 0.05);
        }

        .premium-footer p {
            margin-bottom: 0.5rem;
        }

        /* Premium Scrollbar */
        ::-webkit-scrollbar {
            width: 8px;
            height: 8px;
        }

        ::-webkit-scrollbar-track {
            background: var(--dark-bg);
        }

        ::-webkit-scrollbar-thumb {
            background: var(--primary-dark);
            border-radius: 4px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: var(--primary);
        }

        /* Premium Section Titles */
        .premium-title {
            font-weight: 600;
            margin-bottom: 1.5rem;
            position: relative;
            display: inline-block;
            padding-bottom: 0.5rem;
        }

        .premium-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 60px;
            height: 3px;
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            border-radius: 3px;
        }

        /* Premium Card Headers */
        .premium-card-header {
            background: linear-gradient(45deg, var(--primary-dark), var(--primary));
            color: white;
            padding: 1rem;
            border-top-left-radius: 11px;
            border-top-right-radius: 11px;
            font-weight: 600;
        }

        /* Stats Cards */
        .stats-card {
            border-radius: 12px;
            height: 100%;
            padding: 1.5rem;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            z-index: 1;
        }

        .stats-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, rgba(0,0,0,0.2), rgba(0,0,0,0));
            z-index: -1;
        }

        .revenue-card {
            background: linear-gradient(45deg, #03dac6, #018786);
        }

        .users-card {
            background: linear-gradient(45deg, #8a2be2, #5e17eb);
        }

        .songs-card {
            background: linear-gradient(45deg, #ff6b6b, #ee5253);
        }

        .orders-card {
            background: linear-gradient(45deg, #ff9f43, #ee5253);
        }

        .feedback-card {
            background: linear-gradient(45deg, #786fa6, #574b90);
        }

        /* Responsive adjustments */
        media (max-width: 992px) {
            .premium-navbar {
                padding: 0.5rem 0;
            }

            body {
                padding-top: 70px;
            }

            .premium-nav-link {
                min-width: auto;
                margin: 0.2rem;
            }

            .navbar-nav .nav-item {
                margin-bottom: 5px;
            }
        }

        media (max-width: 576px) {
            .premium-container {
                padding: 1rem;
            }

            .navbar-brand {
                font-size: 1.5rem;
            }
        }

        /* Premium Badges */
        .badge-premium {
            background: linear-gradient(45deg, var(--primary), var(--secondary));
            color: white;
            padding: 0.4rem 0.8rem;
            border-radius: 6px;
            font-weight: 500;
            font-size: 0.75rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
        }

        /* Cart Badge */
        .cart-badge {
            position: relative;
        }

        .cart-badge::after {
            content: attr(data-count);
            position: absolute;
            top: -8px;
            right: -8px;
            background: var(--secondary);
            width: 18px;
            height: 18px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.7rem;
            font-weight: 600;
        }

        /* Notifications Badge */
        .notification-icon {
            position: relative;
            margin-right: 15px;
        }

        .notification-badge {
            position: absolute;
            top: -5px;
            right: -5px;
            background-color: var(--danger);
            color: white;
            font-size: 0.7rem;
            width: 16px;
            height: 16px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Navbar Collapse */
        .navbar-toggler {
            border: none;
            color: var(--text-primary) !important;
            background-color: transparent !important;
        }

        .navbar-toggler:focus {
            box-shadow: none;
        }

        .navbar-toggler-icon {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(255, 255, 255, 0.8)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");
        }

        /* Admin navbar adjustments */
        .navbar-admin .premium-nav-link {
            padding: 0.5rem 0.5rem !important;
            font-size: 0.9rem;
        }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark fixed-top premium-navbar">
        <div class="container">
            @if (Session["UserId"] == null)
            {
                @Html.ActionLink("SongCart", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            }
            else
            {
                bool isAdmin = Session["IsAdmin"] != null && (bool)Session["IsAdmin"];
                @Html.ActionLink("SongCart", isAdmin ? "AdminDashboard" : "UserHome", isAdmin ? "Admin" : "User", new { area = "" }, new { @class = "navbar-brand" })
            }

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent" aria-controls="navbarContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0 @(Session["IsAdmin"] != null && (bool)Session["IsAdmin"] ? "navbar-admin" : "")">
                    @if (Session["UserId"] == null)
                    {
                        <li class="nav-item">@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "Index" && ViewContext.RouteData.Values["Controller"].ToString() == "Home" ? " active" : "") })</li>
                        <li class="nav-item">@Html.ActionLink("Browse Songs", "BrowseSongs", "Home", new { area = "" }, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "BrowseSongs" ? " active" : "") })</li>
                        <li class="nav-item">@Html.ActionLink("About", "About", "Home", new { area = "" }, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "About" ? " active" : "") })</li>
                        <li class="nav-item">@Html.ActionLink("Contact", "Contact", "Home", new { area = "" }, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "Contact" ? " active" : "") })</li>
                    }
                    else
                    {
                        bool isAdmin = Session["IsAdmin"] != null && (bool)Session["IsAdmin"];

                        if (!isAdmin)
                        {
                            <li class="nav-item">@Html.ActionLink("Home", "UserDashboard", "User", new { area = "" }, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "UserDashboard" ? " active" : "") })</li>
                            <li class="nav-item">@Html.ActionLink("Browse", "BrowseSongsByGenre", "User", null, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "BrowseSongsByGenre" ? " active" : "") })</li>
                            <li class="nav-item">
                                <a class="nav-link premium-nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "ViewWishlist" ? "active" : "")" href="@Url.Action("ViewWishlist", "User")"><i class="far fa-heart me-1"></i> Wishlist</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link premium-nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "OrderHistory" ? "active" : "")" href="@Url.Action("OrderHistory", "User")"><i class="far fa-clock me-1"></i> Orders</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link premium-nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "ViewCart" ? "active" : "")" href="@Url.Action("ViewCart", "User")"><i class="fas fa-shopping-cart me-1"></i> Cart</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link premium-nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "SubmitFeedback" ? "active" : "")" href="@Url.Action("SubmitFeedback", "User")"><i class="far fa-comment me-1"></i> Feedback</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link premium-nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "ViewFeedback" ? "active" : "")" href="@Url.Action("ViewFeedback", "User")"><i class="far fa-comment me-1"></i>View Feedback</a>
                            </li>
                            <li class="nav-item">@Html.ActionLink("About", "About", "User", new { area = "" }, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "About" ? " active" : "") })</li>
                            <li class="nav-item">@Html.ActionLink("Contact", "Contact", "Home", new { area = "" }, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "Contact" ? " active" : "") })</li>
                        }
                        else
                        {
                            <li class="nav-item">@Html.ActionLink("Dashboard", "AdminDashboard", "Admin", null, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "AdminDashboard" ? " active" : "") })</li>
                            <li class="nav-item">@Html.ActionLink("Users", "ManageUsers", "Admin", null, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "ManageUsers" ? " active" : "") })</li>
                            <li class="nav-item">@Html.ActionLink("Songs", "ManageSongs", "Admin", null, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "ManageSongs" ? " active" : "") })</li>
                            <li class="nav-item">@Html.ActionLink("Feedback", "ManageFeedback", "Admin", null, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "ManageFeedback" ? " active" : "") })</li>
                            <li class="nav-item">@Html.ActionLink("Manage Orders", "ManageOrders", "Admin", new { area = "" }, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "ManageOrders" ? " active" : "") })</li>
                            <li class="nav-item">@Html.ActionLink("All Orders", "ViewAllOrders", "Admin", null, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "ViewAllOrders" ? " active" : "") })</li>
                            <li class="nav-item">@Html.ActionLink("Messages", "ViewContactMessages", "Admin", null, new { @class = "nav-link premium-nav-link" + (ViewContext.RouteData.Values["Action"].ToString() == "ViewContactMessages" ? " active" : "") })</li>
                        }
                    }
                </ul>

                <ul class="navbar-nav ms-auto">
                    @if (Session["UserId"] != null)
                    {
                        bool isAdmin = Session["IsAdmin"] != null && (bool)Session["IsAdmin"];
                        if (!isAdmin)
                        {
                            <li class="nav-item">
                                <a class="nav-link premium-nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "UserProfile" ? "active" : "")" href="@Url.Action("UserProfile", "User")">
                                    <i class="fas fa-user-circle me-1"></i> Profile
                                </a>
                            </li>
                        }
                        <li class="nav-item">
                            <a class="nav-link premium-nav-link" href="@Url.Action("Logout", "Account")">
                                <i class="fas fa-sign-out-alt me-1"></i> Logout
                            </a>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a class="nav-link premium-nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "Login" ? "active" : "")" href="@Url.Action("Login", "Account")">
                                <i class="fas fa-sign-in-alt me-1"></i> Login
                            </a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        <div class="premium-container">
            @RenderBody()
        </div>

        <!-- This is the corrected footer section for _Layout.cshtml -->

        <footer class="premium-footer">
            <div class="row">
                <div class="col-md-4 mb-3">
                    <h5 class="mb-3">SongCart</h5>
                    <p>Your premium destination for music.</p>
                </div>
                <div class="col-md-4 mb-3">
                    <h5 class="mb-3">Quick Links</h5>
                    <ul class="list-unstyled">
                        <li><a href="@Url.Action("Index", "Home")" class="text-decoration-none text-secondary">Home</a></li>
                        <li><a href="@Url.Action("About", "Home")" class="text-decoration-none text-secondary">About</a></li>
                        <li><a href="@Url.Action("Contact", "Home")" class="text-decoration-none text-secondary">Contact</a></li>
                    </ul>
                </div>
                <div class="col-md-4 mb-3 text-center">
                    <h5 class="mb-3">Connect With Us</h5>
                    <div class="d-flex justify-content-center gap-3">
                        <a href="#" class="text-secondary fs-5"><i class="fab fa-facebook"></i></a>
                        <a href="#" class="text-secondary fs-5"><i class="fab fa-twitter"></i></a>
                        <a href="#" class="text-secondary fs-5"><i class="fab fa-instagram"></i></a>
                        <a href="#" class="text-secondary fs-5"><i class="fab fa-spotify"></i></a>
                    </div>
                </div>
            </div>
            <div class="border-top border-secondary pt-3 mt-3">
                <p>&copy; @DateTime.Now.Year - SongCart | All Rights Reserved</p>
            </div>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

    <script>
        // Add smooth scrolling
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                document.querySelector(this.getAttribute('href')).scrollIntoView({
                    behavior: 'smooth'
                });
            });
        });

        // Initialize tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        });
    </script>
</body>
</html>