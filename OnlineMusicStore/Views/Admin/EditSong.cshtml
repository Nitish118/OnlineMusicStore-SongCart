@model OnlineMusicStore.Models.Song

@{
    ViewBag.Title = "Edit Song";
}

<div class="d-flex align-items-center justify-content-between mb-4">
    <h2 class="premium-title mb-0">Edit Song</h2>
    <a href="@Url.Action("ManageSongs", "Admin")"
       class="btn btn-premium-sm"
       style="background-color: var(--dark-card-hover); color: #f2f2f2;"
       onmouseover="this.style.outline='2px solid #f2f2f2'; this.style.outlineOffset='2px';"
       onmouseout="this.style.outline='none'; this.style.outlineOffset='0';">
        <i class="fas fa-arrow-left me-2"></i>Back to Songs
    </a>
</div>


@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger mb-4" style="background-color: rgba(207, 102, 121, 0.1); border-color: var(--danger); color: var(--danger);">
        <i class="fas fa-exclamation-triangle me-2"></i>Please correct the highlighted errors below.
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.SongId)

    <div class="premium-card">
        <div class="premium-card-header">
            <i class="fas fa-music me-2"></i>Song Information
        </div>
        <div class="card-body p-4">
            <div class="row">
                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.Title, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Title, new { @class = "form-control form-control-premium" })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.Artist, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Artist, new { @class = "form-control form-control-premium" })
                    @Html.ValidationMessageFor(model => model.Artist, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.Genre, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.Genre, new { @class = "form-control form-control-premium" })
                    @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.Price, new { @class = "form-label" })
                    <div class="input-group">
                        <span class="input-group-text" style="background-color: var(--dark-input); border-color: rgba(255, 255, 255, 0.1); color: var(--text-secondary);">₹</span>
                        @Html.TextBoxFor(model => model.Price, new { @class = "form-control form-control-premium", type = "number", step = "0.01" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.CoverImageUrl, new { @class = "form-label" })
                    @Html.TextBoxFor(model => model.CoverImageUrl, new { @class = "form-control form-control-premium" })
                    @Html.ValidationMessageFor(model => model.CoverImageUrl, "", new { @class = "text-danger" })
                </div>

                <div class="col-md-6 mb-3">
                    @Html.LabelFor(model => model.Duration, new { @class = "form-label" })
                    <div class="input-group">
                        <span class="input-group-text" style="background-color: var(--dark-input); border-color: rgba(255, 255, 255, 0.1); color: var(--text-secondary);">
                            <i class="fas fa-clock"></i>
                        </span>
                        @Html.TextBoxFor(model => model.Duration, new { @class = "form-control form-control-premium", placeholder = "hh:mm:ss" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="d-flex gap-2 mt-4">
                <button type="submit" class="btn btn-premium">
                    <i class="fas fa-save me-2"></i>Update Song
                </button>
                <a href="@Url.Action("ManageSongs", "Admin")"
                   class="btn btn-premium-sm"
                   style="background-color: var(--dark-card-hover); color: #f2f2f2;"
                   onmouseover="this.style.outline='2px solid #f2f2f2'; this.style.outlineOffset='2px';"
                   onmouseout="this.style.outline='none'; this.style.outlineOffset='0';">
                    <i class="fas fa-arrow-left me-2"></i> Cancel
                </a>
            </div>

        </div>
    </div>
}